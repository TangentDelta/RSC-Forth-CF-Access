HEX
EF00 CONSTANT IOPAGE
IOPAGE 10 + CONSTANT CFBASE

0 VARIABLE CFBUFF 1FE ALLOT

: BYTESWAP ( START-ADDR --- )
  DUP 1+ 2DUP
  C@ SWAP C@
  ROT C! SWAP C!
;

: CFWAIT ( --- )
BEGIN
  CFBASE 7 + C@ 80 AND
  0=
UNTIL
;

: CFERR ( --- )
CFBASE 7 + C@ 1 AND IF
  ." CF CARD ERROR!"
  COLD
THEN
;

: CF@ ( --- CFBYTE )
  CFBASE C@
;

: ?CFDRQ ( --- !DRQ )
  CFBASE 7 + C@ 8 AND 0=
;

: CFLBA! ( LBA. --- )
  DUP 100 / CFBASE 3 + C!
  FF AND CFBASE 4 + C!
  DUP 100 / CFBASE 5 + C!
  F AND E0 OR CFBASE 6 + C!
;

: CFREAD ( ADDR --- )
  BEGIN
    DUP
    CF@ SWAP C! 1+
    ?CFDRQ
  UNTIL

  DROP
;

: CFWRITE ( ADDR --- )
  BEGIN
    DUP ( ADDR ADDR )
    C@ CFBASE C! 1+
    ?CFDRQ
  UNTIL

  DROP
;

: CFINIT ( --- )
    4 CFBASE 7 + C!  ( RESET THE CF CARD )
    CFWAIT

    E0 CFBASE 6 + C!  ( LBA3=0, MASTER, MODE=LBA )

    1 CFBASE 1 + C!   ( 8-BIT MODE )
    EF CFBASE 7 + C!  ( SET FEATURE )

    CFWAIT
    CFERR

    CR ." CF CARD INITIALIZED" CR
;

: CFR/W ( MEMADDR BLOCK# READ --- )
  SWAP  ( MEMADDR READ BLOCK# )
  CFWAIT  ( WAIT FOR CF TO BECOME READY )
  2 U* CFLBA! ( SET THE DESIRED LBA )
  2 CFBASE 2 + C! ( 2 BLOCKS, 1024 BYTES )
  IF
    20 CFBASE 7 + C! ( READ SECTOR COMMAND )
    CFREAD
  ELSE
    30 CFBASE 7 + C! ( WRITE SECTOR COMMAND )
    CFWRITE
  THEN
;

' CFR/W CFA UR/W !

: CFINFO ( --- )
  CFWAIT
  EC CFBASE 7 + C!  ( IDENTIFY )
  CFWAIT

  CFBUFF
  BEGIN
    DUP CF@ SWAP C! 1 +
    ?CFDRQ
  UNTIL
  DROP

  CR ." SERIAL NUMBER: "
  A 0 DO ( SWAP THE BYTES OF THE SERIAL NUMBER STRING )
    CFBUFF 14 +  ( MOVE TO THE POSITION OF THE STRING )
    I 2 * +  ( SET THE OFFSET )
    BYTESWAP ( SWAP THE TWO BYTES )
  LOOP

  CFBUFF 14 + 14 TYPE ( PRINT OUT THE SERIAL NUMBER )


  CR ." MODEL: "
  14 0 DO ( SWAP THE BYTES OF THE MODEL NUMBER STRING )
    CFBUFF 36 +  ( MOVE TO THE POSITION OF THE STRING )
    I 2 * +  ( SET THE OFFSET )
    BYTESWAP ( SWAP THE TWO BYTES )
  LOOP
  
  CFBUFF 36 + 28 TYPE ( PRINT OUT THE MODEL NUMBER )

  CR ." LBA BLOCKS: "
  CFBUFF 72 + @ ( GET LSW )
  CFBUFF 74 + @ ( GET MSW )
  <# #S #> TYPE CR
;

: CFTEST
EC CFBASE 7 + C!
0 BEGIN CR CF@ . 1+
CFBASE 7 + C@ 8 AND 0=
UNTIL
CR . ."  BYTES READ" CR
;

: TEST
IF
  ." READ BLOCK " . ."  TO ADDRESS " . CR
ELSE
  ." WRITE BLOCK " . ."  TO ADDRESS " . CR
THEN
;